// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MottuFlowApi.Data;
using Oracle.EntityFrameworkCore.Metadata;

#nullable disable

namespace MottuFlow.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            OracleModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MottuFlow.Models.ArucoTag", b =>
                {
                    b.Property<int>("IdTag")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("id_tag");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdTag"));

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)")
                        .HasColumnName("codigo");

                    b.Property<int>("IdMoto")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("id_moto");

                    b.Property<int?>("MotoIdMoto")
                        .HasColumnType("NUMBER(10)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("NVARCHAR2(20)")
                        .HasColumnName("status");

                    b.HasKey("IdTag");

                    b.HasIndex("MotoIdMoto");

                    b.ToTable("aruco_tag", (string)null);
                });

            modelBuilder.Entity("MottuFlow.Models.Camera", b =>
                {
                    b.Property<int>("IdCamera")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("id_camera");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCamera"));

                    b.Property<int>("IdPatio")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("id_patio");

                    b.Property<string>("LocalizacaoFisica")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("NVARCHAR2(255)")
                        .HasColumnName("localizacao_fisica");

                    b.Property<int?>("PatioIdPatio")
                        .HasColumnType("NUMBER(10)");

                    b.Property<string>("StatusOperacional")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("NVARCHAR2(20)")
                        .HasColumnName("status_operacional");

                    b.HasKey("IdCamera");

                    b.HasIndex("PatioIdPatio");

                    b.ToTable("camera", (string)null);
                });

            modelBuilder.Entity("MottuFlow.Models.Funcionario", b =>
                {
                    b.Property<int>("IdFuncionario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("id_funcionario");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdFuncionario"));

                    b.Property<string>("CPF")
                        .IsRequired()
                        .HasMaxLength(14)
                        .HasColumnType("NVARCHAR2(14)")
                        .HasColumnName("cpf");

                    b.Property<string>("Cargo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)")
                        .HasColumnName("cargo");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)")
                        .HasColumnName("email");

                    b.Property<DateTime?>("ExpiracaoRefreshToken")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("expiracao_refresh_token");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR2(100)")
                        .HasColumnName("nome");

                    b.Property<string>("RefreshToken")
                        .HasMaxLength(255)
                        .HasColumnType("NVARCHAR2(255)")
                        .HasColumnName("refresh_token");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("NVARCHAR2(255)")
                        .HasColumnName("senha");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("NVARCHAR2(20)")
                        .HasColumnName("telefone");

                    b.HasKey("IdFuncionario");

                    b.ToTable("funcionario", (string)null);
                });

            modelBuilder.Entity("MottuFlow.Models.Localidade", b =>
                {
                    b.Property<int>("IdLocalidade")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("id_localidade");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdLocalidade"));

                    b.Property<int?>("CameraIdCamera")
                        .HasColumnType("NUMBER(10)");

                    b.Property<DateTime>("DataHora")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("data_hora");

                    b.Property<int>("IdCamera")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("id_camera");

                    b.Property<int>("IdMoto")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("id_moto");

                    b.Property<int>("IdPatio")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("id_patio");

                    b.Property<int?>("MotoIdMoto")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int?>("PatioIdPatio")
                        .HasColumnType("NUMBER(10)");

                    b.Property<string>("PontoReferencia")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR2(100)")
                        .HasColumnName("ponto_referencia");

                    b.HasKey("IdLocalidade");

                    b.HasIndex("CameraIdCamera");

                    b.HasIndex("MotoIdMoto");

                    b.HasIndex("PatioIdPatio");

                    b.ToTable("localidade", (string)null);
                });

            modelBuilder.Entity("MottuFlow.Models.Moto", b =>
                {
                    b.Property<int>("IdMoto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("id_moto");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdMoto"));

                    b.Property<int>("Ano")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("ano");

                    b.Property<string>("Fabricante")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)")
                        .HasColumnName("fabricante");

                    b.Property<int>("IdPatio")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("id_patio");

                    b.Property<string>("LocalizacaoAtual")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR2(100)")
                        .HasColumnName("localizacao_atual");

                    b.Property<string>("Modelo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)")
                        .HasColumnName("modelo");

                    b.Property<int?>("PatioIdPatio")
                        .HasColumnType("NUMBER(10)");

                    b.Property<string>("Placa")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("NVARCHAR2(10)")
                        .HasColumnName("placa");

                    b.HasKey("IdMoto");

                    b.HasIndex("PatioIdPatio");

                    b.ToTable("moto", (string)null);
                });

            modelBuilder.Entity("MottuFlow.Models.Patio", b =>
                {
                    b.Property<int>("IdPatio")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("id_patio");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPatio"));

                    b.Property<int>("CapacidadeMaxima")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("capacidade_maxima");

                    b.Property<string>("Endereco")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("NVARCHAR2(200)")
                        .HasColumnName("endereco");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR2(100)")
                        .HasColumnName("nome");

                    b.HasKey("IdPatio");

                    b.ToTable("patio", (string)null);
                });

            modelBuilder.Entity("MottuFlow.Models.RegistroStatus", b =>
                {
                    b.Property<int>("IdStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("id_status");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdStatus"));

                    b.Property<DateTime>("DataStatus")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("data_status");

                    b.Property<string>("Descricao")
                        .HasMaxLength(255)
                        .HasColumnType("NVARCHAR2(255)")
                        .HasColumnName("descricao");

                    b.Property<int?>("FuncionarioIdFuncionario")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int>("IdFuncionario")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("id_funcionario");

                    b.Property<int>("IdMoto")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("id_moto");

                    b.Property<int?>("MotoIdMoto")
                        .HasColumnType("NUMBER(10)");

                    b.Property<string>("TipoStatus")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)")
                        .HasColumnName("tipo_status");

                    b.HasKey("IdStatus");

                    b.HasIndex("FuncionarioIdFuncionario");

                    b.HasIndex("MotoIdMoto");

                    b.ToTable("registro_status", (string)null);
                });

            modelBuilder.Entity("MottuFlow.Models.ArucoTag", b =>
                {
                    b.HasOne("MottuFlow.Models.Moto", "Moto")
                        .WithMany("ArucoTags")
                        .HasForeignKey("MotoIdMoto");

                    b.Navigation("Moto");
                });

            modelBuilder.Entity("MottuFlow.Models.Camera", b =>
                {
                    b.HasOne("MottuFlow.Models.Patio", "Patio")
                        .WithMany("Cameras")
                        .HasForeignKey("PatioIdPatio");

                    b.Navigation("Patio");
                });

            modelBuilder.Entity("MottuFlow.Models.Localidade", b =>
                {
                    b.HasOne("MottuFlow.Models.Camera", "Camera")
                        .WithMany("Localidades")
                        .HasForeignKey("CameraIdCamera");

                    b.HasOne("MottuFlow.Models.Moto", "Moto")
                        .WithMany("Localidades")
                        .HasForeignKey("MotoIdMoto");

                    b.HasOne("MottuFlow.Models.Patio", "Patio")
                        .WithMany("Localidades")
                        .HasForeignKey("PatioIdPatio");

                    b.Navigation("Camera");

                    b.Navigation("Moto");

                    b.Navigation("Patio");
                });

            modelBuilder.Entity("MottuFlow.Models.Moto", b =>
                {
                    b.HasOne("MottuFlow.Models.Patio", "Patio")
                        .WithMany("Motos")
                        .HasForeignKey("PatioIdPatio");

                    b.Navigation("Patio");
                });

            modelBuilder.Entity("MottuFlow.Models.RegistroStatus", b =>
                {
                    b.HasOne("MottuFlow.Models.Funcionario", "Funcionario")
                        .WithMany("RegistrosStatus")
                        .HasForeignKey("FuncionarioIdFuncionario");

                    b.HasOne("MottuFlow.Models.Moto", "Moto")
                        .WithMany("RegistrosStatus")
                        .HasForeignKey("MotoIdMoto");

                    b.Navigation("Funcionario");

                    b.Navigation("Moto");
                });

            modelBuilder.Entity("MottuFlow.Models.Camera", b =>
                {
                    b.Navigation("Localidades");
                });

            modelBuilder.Entity("MottuFlow.Models.Funcionario", b =>
                {
                    b.Navigation("RegistrosStatus");
                });

            modelBuilder.Entity("MottuFlow.Models.Moto", b =>
                {
                    b.Navigation("ArucoTags");

                    b.Navigation("Localidades");

                    b.Navigation("RegistrosStatus");
                });

            modelBuilder.Entity("MottuFlow.Models.Patio", b =>
                {
                    b.Navigation("Cameras");

                    b.Navigation("Localidades");

                    b.Navigation("Motos");
                });
#pragma warning restore 612, 618
        }
    }
}
